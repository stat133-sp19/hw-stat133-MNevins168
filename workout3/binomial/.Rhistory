column_names <- c("Sex", "Length", "Diameter", "Height", "Whole", "Shucked", "Viscera", "Shell", "Rings")
column_types <- c("factor", "double", "double", "double", "double", "double", "double", "double", "integer")
abalone <- read.table("abalone.data", sep = ",", header = FALSE, col.names = column_names, colClasses = column_types)
str(abalone)
abalone2 <- read.csv("abalone.data", header = FALSE, sep = ",")
str(abalone2)
abalone10 <- read.csv("abalone.data", header = FALSE, nrows = 10, sep = ",")
str(abalone10)
abalone20 <- read.csv("abalone.data", header = FALSE, skip = 10, nrows = 10, sep = ",")
str(abalone20)
str(abalone)
summary(abalone)
head(abalone)
tail(abalone)
dim(abalone)
names(abalone)
colnames(abalone)
nrow(abalone)
ncol(abalone)
for (i in 2:length(column_names)) {
print(column_names[i])
print(min(abalone[ ,i]))
print(max(abalone[ ,i]))
print(mean(abalone[ ,i]))
print(sd(abalone[ ,i]))
writeLines("\n")
}
five_rows <- abalone[1:5,]
five_rows
fivetofifty_rows <- abalone[5*1:10,]
fivetofifty_rows
lastfive_rows <- abalone[(nrow(abalone) - 5):nrow(abalone),]
lastfive_rows
height14 <- abalone[abalone$height < 0.14,]
dim(height14)
# infant <- abalone["Sex" == "I"]
# dim(infant)
# male_female <- abalone["Sex" == "I"]
# dim(male)
five_rows <- abalone[1:5,]
five_rows
fivetofifty_rows <- abalone[5*1:10,]
fivetofifty_rows
lastfive_rows <- abalone[(nrow(abalone) - 5):nrow(abalone),]
lastfive_rows
height14 <- abalone[abalone$height < 0.28,]
dim(height14)
# infant <- abalone["Sex" == "I"]
# dim(infant)
# male_female <- abalone["Sex" == "I"]
# dim(male)
five_rows <- abalone[1:5,]
five_rows
fivetofifty_rows <- abalone[5*1:10,]
fivetofifty_rows
lastfive_rows <- abalone[(nrow(abalone) - 5):nrow(abalone),]
lastfive_rows
height14 <- abalone[abalone$Height < 0.28,]
dim(height14)
# infant <- abalone["Sex" == "I"]
# dim(infant)
# male_female <- abalone["Sex" == "I"]
# dim(male)
load("~/Stat 133 and 134 HW stuff/r working directory/nba2018-salary-points.RData")
help("~")
?rm
rm(list = ls())
#Problem 5
salary2 <- log(nba$salary / 1000000)
install.packages(c("dplyr", "ggplot2"))
install.packages(c("dplyr", "ggplot2"))
import("readr")
install.packages("readr")
install.packages("ggplot2")
#1
library(readr)
library(dplyr)
library(ggplot2)
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
dat <- read_csv(datafile, col_names = TRUE, col_types = cols_only("c", "c", "f", "i", "i", "i", "i", "c", "d", "i", "i", "i", "i", "i", "i"))
summary(dat)
typeof(dat)
#2
#a) tibbles are data frames that do not convert characters into factors and only display the first ten rows.
#b) Yes, you can use a dash to skip unwanted column in col_types.
#c) read_csv() uses col_names for header, col_names for col.names, na for na.Strings and col_types for colClasses.
#3
team_salaries <- arrange(summarise(group_by(select(dat, salary, team), team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary)/1000000, median_salary = median(salary)/1000000), desc(total_salary))
as.data.frame(team_salaries)
tsaltemp <- total_salary
#1
library(readr)
library(dplyr)
library(ggplot2)
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
dat <- read_csv(datafile, col_names = TRUE, col_types = cols_only("c", "c", "f", "i", "i", "i", "i", "c", "d", "i", "i", "i", "i", "i", "i"))
summary(dat)
typeof(dat)
#2
#a) tibbles are data frames that do not convert characters into factors and only display the first ten rows.
#b) Yes, you can use a dash to skip unwanted column in col_types.
#c) read_csv() uses col_names for header, col_names for col.names, na for na.Strings and col_types for colClasses.
#3
team_salaries <- arrange(summarise(group_by(select(dat, salary, team), team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary)/1000000, median_salary = median(salary)/1000000), desc(total_salary))
as.data.frame(team_salaries)
tsaltemp <- teamsalaries$total_salary
#1
library(readr)
library(dplyr)
library(ggplot2)
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
dat <- read_csv(datafile, col_names = TRUE, col_types = cols_only("c", "c", "f", "i", "i", "i", "i", "c", "d", "i", "i", "i", "i", "i", "i"))
summary(dat)
typeof(dat)
#2
#a) tibbles are data frames that do not convert characters into factors and only display the first ten rows.
#b) Yes, you can use a dash to skip unwanted column in col_types.
#c) read_csv() uses col_names for header, col_names for col.names, na for na.Strings and col_types for colClasses.
#3
team_salaries <- arrange(summarise(group_by(select(dat, salary, team), team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary)/1000000, median_salary = median(salary)/1000000), desc(total_salary))
as.data.frame(team_salaries)
tsaltemp <- team_salaries$total_salary
import('rcolorbrewer')
install.packages("rcolorbrewer")
yes
install.packages("RColorBrewer")
#5
points_salary <- full_join(team_salaries, team_points)
#5
points_salary <- full_join(team_salaries, team_points)
#5
points_salary <- full_join(team_salaries, team_points)
#5
points_salary <- full_join(team_salaries, team_points)
shiny::runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
rm ls = list()
rm(ls = list())
View(team_salaries)
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/oijpiouboiuouhjvio')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
clear
clear()
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
shiny::runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
clear
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab10randomsim')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab11-shiny-apps/app2.R')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab11-shiny-apps/app1.R')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab11-shiny-apps/app1.R')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab11-shiny-apps/app2.R')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab11-shiny-apps/app2.R')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab11-shiny-apps/app3.R')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab11-shiny-apps/app3.R')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab11-shiny-apps/app3.R')
runApp('Stat 133 and 134 HW stuff/r working directory/shinyapps/lab11-shiny-apps/app3.R')
library(shiny); runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
install.packages("Rmisc")
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
library(shiny); runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
runApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02.R')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='mnevins168', token='55CD99893047488FE7403D292F0895E0', secret='b4nG3QQWJKcFi/kvixnq0vsWv3LdcNgUHwzWmJzf')
library(rsconnect)
rsconnect::deployApp('Stat 133 and 134 HW stuff/r working directory/workout02/workout02')
R.version()
R.version
install.packages("installr");library(installr)
updateR()
library(rsconnect)
rsconnect::setAccountInfo(name='mnevins168',
token='55CD99893047488FE7403D292F0895E0',
secret='<SECRET>')
rsconnect::setAccountInfo(name='mnevins168', token='55CD99893047488FE7403D292F0895E0', secret='b4nG3QQWJKcFi/kvixnq0vsWv3LdcNgUHwzWmJzf')
library(rsconnect)
rsconnect::deployApp('C:\Users\Mark\Documents\Stat 133 and 134 HW stuff\r working directory\workout02')
library(rsconnect)
rsconnect::deployApp("C:\Users\Mark\Documents\Stat 133 and 134 HW stuff\r working directory\workout02")
library(rsconnect)
rsconnect::deployApp("Stat 133 and 134 HW stuff\r working directory\workout02")
library(rsconnect)
rsconnect::deployApp("C:\\Users\\Mark\\Documents\\Stat 133 and 134 HW stuff\\r working directory\\workout02")
library(rsconnect)
rsconnect::deployApp("C:\\Users\\Mark\\Documents\\Stat 133 and 134 HW stuff\\r working directory\\workout02")
install.packages("stringi")
install.packages("stringi")
library(rsconnect)
rsconnect::deployApp("C:\\Users\\Mark\\Documents\\Stat 133 and 134 HW stuff\\r working directory\\workout02")
install.packages("openssl")
library(rsconnect)
rsconnect::deployApp("C:\\Users\\Mark\\Documents\\Stat 133 and 134 HW stuff\\r working directory\\workout02")
install.packages(c("XML","xml2","rvest","magrittr"))
library(XML)
library(xml2)
library(rvest)
library(magrittr)
library(stringr)
library(dplyr)
# Assemble url (so it fits on screen)
basket <- "https://www.basketball-reference.com"
# bos <- "/teams/BOS/2017.html"
# bos_url <- paste0(basket, bos)
#
# # download HTML file to your working directory
# download.file(bos_url, 'bos-roster-2017.html')
#
# # Read BOS Roster html table
# bos_roster <- readHTMLTable('bos-roster-2017.html')
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
xml_text <- xml_doc %>% html_text()
xml_table1 <- xml_doc %>%
html_nodes("table") %>%
extract(1)
tbl1 <- html_table(xml_table1)
xml_tables <- xml_doc %>%
html_nodes("table") %>%
extract(1:2)
xml_tables %>%
html_nodes("a") %>%
html_text()
hrefs <- xml_tables %>%
html_nodes("a") %>%
html_attr("href")
teams <- str_extract(hrefs,"[[:upper:]][[:upper:]][[:upper:]]")
files <- vector(length = length(teams))
for (i in 1:length(teams)) {
files[i] <- paste0(teams[i],"-roster-2017.csv")
}
# modify with `hrefs[1]`
basket <- "https://www.basketball-reference.com"
team_url <- paste0(basket, hrefs[1])
teams_xml <- read_html(team_url)
roster <- html_table(teams_xml)
write.csv(roster, file = "BOS-roster-2017.csv")
chosen <- c(13,2,18,11,14)
inter <- vector(length = 5)
for (i in 1:5) {
basket %>%
paste0(hrefs[chosen[i]]) %>%
read_html() %>%
html_table() %>%
write.csv(file = files[chosen[i]])
inter <- basket %>%
paste0(hrefs[chosen[i]]) %>%
read_html() %>%
html_table()
}
for (i in 1:5) {
newfr <- mutate(as.data.frame(inter[i]), team_name = teams[chosen[i]])
if (i == 1) {
fulldat <- newfr
} else {
fulldat <- rbind(fulldat, newfr)
}
}
print(fulldat)
View(fulldat)
View(newfr)
library(XML)
library(xml2)
library(rvest)
library(magrittr)
library(stringr)
library(dplyr)
# Assemble url (so it fits on screen)
basket <- "https://www.basketball-reference.com"
# bos <- "/teams/BOS/2017.html"
# bos_url <- paste0(basket, bos)
#
# # download HTML file to your working directory
# download.file(bos_url, 'bos-roster-2017.html')
#
# # Read BOS Roster html table
# bos_roster <- readHTMLTable('bos-roster-2017.html')
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
xml_text <- xml_doc %>% html_text()
xml_table1 <- xml_doc %>%
html_nodes("table") %>%
extract(1)
tbl1 <- html_table(xml_table1)
xml_tables <- xml_doc %>%
html_nodes("table") %>%
extract(1:2)
xml_tables %>%
html_nodes("a") %>%
html_text()
hrefs <- xml_tables %>%
html_nodes("a") %>%
html_attr("href")
teams <- str_extract(hrefs,"[[:upper:]][[:upper:]][[:upper:]]")
files <- vector(length = length(teams))
for (i in 1:length(teams)) {
files[i] <- paste0(teams[i],"-roster-2017.csv")
}
# modify with `hrefs[1]`
basket <- "https://www.basketball-reference.com"
team_url <- paste0(basket, hrefs[1])
teams_xml <- read_html(team_url)
roster <- html_table(teams_xml)
write.csv(roster, file = "BOS-roster-2017.csv")
chosen <- c(13,2,18,11,14)
inter <- vector(length = 5)
for (i in 1:5) {
basket %>%
paste0(hrefs[chosen[i]]) %>%
read_html() %>%
html_table() %>%
write.csv(file = files[chosen[i]])
inter <- basket %>%
paste0(hrefs[chosen[i]]) %>%
read_html() %>%
html_table()
}
for (i in 1:5) {
newfr <- mutate(as.data.frame(inter[2]), team_name = teams[chosen[2]])
if (i == 1) {
fulldat <- newfr
} else {
fulldat <- rbind(fulldat, newfr)
}
}
print(fulldat)
rm(list = ls())
install.packages(devtools)
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
setwd(C:\Users\Mark\Documents\Stat 133 and 134 HW stuff\r working directory\parent_directory)
setwd("parent_directory")
getwd
getwd()
setwd(/Stat 133 and 134 HW stuff/r working directory/parent_directory)
setwd(\Stat 133 and 134 HW stuff\r working directory\parent_directory)
setwd("/Stat 133 and 134 HW stuff/r working directory/parent_directory")
getwd
getwd()
setwd("parent_directory")
create("binomial")
devtools::document()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
document()
getwd()
setwd("./binomial")
document()
document()
document()
document()
document()
document()
document()
document()
install.packages("testthat")
devtools::use_testthat()
use_test()
use_test()
use_test()
use_test()
use_test()
use_test()
